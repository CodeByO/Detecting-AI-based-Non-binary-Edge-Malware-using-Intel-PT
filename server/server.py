#import all the required libraries
import os
from fastapi import FastAPI, UploadFile
from starlette.responses import RedirectResponse
import sys,os
sys.path.append(os.path.dirname(os.path.abspath(os.path.dirname(__file__))))
from scripts import vtune_to_png as vtp
from scripts import exe_to_Grey as etg
from scripts import exe_to_RGB as etr 
sys.path.append(os.path.join(os.path.dirname(os.path.abspath(os.path.dirname(__file__))),'scripts'))
#creating fastApi app 
app_desc = """<h2> 
AI-Based Non-Binary Edge Malware Detection Utilizing Intel PT (Processor Trace)</h2>
<h3> mode 1 : Image CNN <h4> type 1 : Grey </h4><h4> type 2 : RGB </h4></h3> <h3> mode 2 : Text CNN => need Administrator Permission </h3>

"""
app = FastAPI(description = app_desc)

@app.get("/",include_in_schema=False)
async def index():
	return RedirectResponse(url="/docs")

@app.post("/predict/{mode}/{type}")
async def parse(mode : int, type : int, file: UploadFile):
  data_path = os.path.join(os.path.dirname(os.path.abspath(os.path.dirname(__file__))),'data')
  UPLOAD_DIRECTORY = data_path
  if not file.filename.endswith(".exe"):
        return {'response':'Not Executable File'}
  else:
        file.filename.replace(".exe","")
  contents = await file.read()
  with open(os.path.join(UPLOAD_DIRECTORY, file.filename), "wb") as fp:
    fp.write(contents)
  path = os.path.join(UPLOAD_DIRECTORY, file.filename)
  if mode == 1:
    if type == 1:
          prediction = etg.main(path)
          os.remove(path)
          return {'response':'Success','prediction' : prediction}
    elif type == 2:
      prediction = etr.main(path)
      os.remove(path)
      return {'response':'Success','prediction' : prediction}
    else:
      return {'response':'Invalid Type','path':path,'mode':mode, 'type':type}
  elif mode == 2:
    vtp.execute_powershell(path)
    os.remove(path)
  else:
    return {'response':'Invalid Mode','path':path,'mode':mode}