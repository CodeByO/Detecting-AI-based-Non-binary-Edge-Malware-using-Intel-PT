function New-PSCredential {
	param
	(
	[parameter(Mandatory=$true)]
	[string]$Username,
	[parameter(Mandatory=$true)]
	[string]$Password
	)

	New-Object System.Management.Automation.PSCredential -ArgumentList $Username, $(New-SecureString -Value $Password)
}
function New-SecureString {
	param
	(
	[parameter(Mandatory=$true)]
	[string]$Value
	)

	$secureString = New-Object System.Security.SecureString
	$Value.ToCharArray() | %{ $secureString.AppendChar($_) }

	return $secureString
}

$executablePath = $args | Out-String
$userName = "ipt"
$password = "1234"
$vmName = "win10"
$snapshotName = "BeforeExecution"
$executableName = Split-Path -Leaf $executablePath
$vmResultsPath = "C:\workspace"
$VMexecutablePath = "C:\$executableName"
Connect-VMNetworkAdapter -VMName $vmName -SwitchName "None"
Start-VM -Name $vmName
Start-Sleep -Seconds 15

Copy-VMFile -Name $vmName -SourcePath $executablePath -DestinationPath 'C:\' -FileSource Host -CreateFullPath
Write-Host $executablePath

$vtuneCollect = @"
& vtune.exe -collect hotspots -knob sampling-mode=hw -knob enable-stack-collection=true -r '$vmResultsPath\input_file' -finalization-mode=full --  '$VMexecutablePath'
"@
$vtuneStop = @"
& vtune -r '$vmResultsPath\input_file' -command stop
"@
$vtuneReFinal = @" 
& vtune.exe -I -r 'C:\input_file'
"@
$vtuneToCSV = @"
vtune.exe -R hotspots -r 'C:\input_file' -report-output '$vmResultsPath\input_file.csv' -format csv -csv-delimiter comma
"@
$cred = New-PSCredential -Username "ipt" -Password "1234"
$session = New-PSSession -VMName $vmName -Credential $cred

Invoke-Command -Session $session -ScriptBlock { param($script) Invoke-Expression $script } -ArgumentList $vtuneCollect -AsJob

Start-Sleep 60
$cred = New-PSCredential -Username "ipt" -Password "1234"
$session = New-PSSession -VMName $vmName -Credential $cred
     
Invoke-Command -Session $session -ScriptBlock { param($script) Invoke-Expression $script } -ArgumentList $vtuneStop -ErrorAction Ignore

Get-Job | Wait-Job

$sourceDir = "$vmResultPath"

Copy-Item $vmResultPath $vmResultPath -FromSession $Session -Recurse -Force

Restore-VMSnapshot -Name $snapshotName -VMName $vmName -Confirm:$false

Start-VM -Name $vmName
Start-Sleep -Seconds 15

Copy-VMFile -Name $vmName -SourcePath $vmResultPath -DestinationPath 'C:\' -FileSource Host -CreateFullPath

Connect-VMNetworkAdapter -VMName $vmName -SwitchName "Default Switch"

Invoke-Command -Session $session -ScriptBlock { param($script) Invoke-Expression $script } -ArgumentList $vtuneReFinal
Invoke-Command -Session $session -ScriptBlock { param($script) Invoke-Expression $script } -ArgumentList $vtuneToCSV

$sourceCsv = "$vmResultsPath\input_file.csv"
$destinationCsv = "$vmResultsPath\input_file.csv"
Copy-Item $sourceCsv $destinationCsv -FromSession $Session
Restore-VMSnapshot -Name $snapshotName -VMName $vmName -Confirm:$false
